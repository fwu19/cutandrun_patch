params {
    outdir = "./results"
    publish_dir_mode = "copy"
    igenomes_ignore = false
    igenomes_base = "s3://ngi-igenomes/igenomes/"
}


report {
    enabled = true
    file = "nextflow.report.html"
    overwrite = true
}

// Load igenomes.config if required
if (!params.igenomes_ignore) {
    includeConfig 'conf/igenomes.config'
} else {
    params.genomes = [:]
}

// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.

env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
    JULIA_DEPOT_PATH = "/usr/local/share/julia"
    MPLCONFIGDIR = '/hpc/temp/_SR/Genomics/nextflow/cache'
	R_LIBS = '/fh/fast/_SR/Genomics/user/fwu/R/x86_64-pc-linux-gnu-library/4.1' 
}

// Capture exit codes from upstream processes when piping
process.shell = ["/bin/bash", "-euo", "pipefail"]

def trace_timestamp = new java.util.Date().format( "yyyy-MM-dd_HH-mm-ss")
timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/patch/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/patch/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.outdir}/pipeline_info/patch/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.outdir}/pipeline_info/patch/pipeline_dag_${trace_timestamp}.html"
}

// Load flowswitch.config
includeConfig 'conf/flowswitch.config'

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'
